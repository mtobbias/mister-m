import os
from dotenv import load_dotenv

load_dotenv(override=True)

# === Environment Variables ===
RABBITMQ_URI = os.getenv("RABBITMQ_URI")
if not RABBITMQ_URI:
    raise ValueError("Environment variable 'RABBITMQ_URI' is not set.")

OPENAI_API_KEY = os.getenv("OPENAI_API_KEY")

LEIA_OPENAI_API_KEY = os.getenv("LEIA_OPENAI_API_KEY", OPENAI_API_KEY)
C3PO_OPENAI_API_KEY = os.getenv("C3PO_OPENAI_API_KEY", OPENAI_API_KEY)

LEIA_TRANSCRIBE_PROVIDER = os.getenv("LEIA_TRANSCRIBE_PROVIDER", "local").lower()
LLM_PROVIDER = os.getenv("LLM_PROVIDER", "gpt").lower()
C3P0_LLM_PROVIDER = os.getenv("C3P0_LLM_PROVIDER", "openai").lower()
OLLAMA_MODEL = os.getenv("OLLAMA_MODEL", "gemma3:1b")
C3PO_OLLAMA_MODEL = os.getenv("C3PO_OLLAMA_MODEL", "gemma3:1b")

# === Queue Names ===
QUEUE_FALCON_AUDIO = "QUEUE_FALCON_AUDIO"
QUEUE_FALCON_SCREEN = "QUEUE_FALCON_SCREEN"
QUEUE_FALCON_DESCRIBE = "QUEUE_FALCON_DESCRIBE"
QUEUE_FALCON_ASK = "QUEUE_FALCON_ASK"
QUEUE_FALCON_ASK_AUDIO = "QUEUE_FALCON_ASK"
QUEUE_FALCON_TO_SPEECH = "QUEUE_FALCON_TO_SPEECH"
QUEUE_FALCON_X_WING = "QUEUE_FALCON_X_WING"
QUEUE_FALCON_X_WING_AUDIO = "QUEUE_FALCON_X_WING_AUDIO"

# === Event Identifiers ===
PRINT_SCREEN = "PRINT_SCREEN"
START_RECORD = "START_RECORD"
STOP_RECORD = "STOP_RECORD"

# === LEIA Agent Constants ===
LEIA_SAMPLERATE = 44100
LEIA_CHUNK_DURATION = 3.0
LEIA_OVERLAP = 1.0
LEIA_BUFFER_SIZE = int(LEIA_SAMPLERATE * LEIA_CHUNK_DURATION)
LEIA_STEP_SIZE = int(LEIA_SAMPLERATE * (LEIA_CHUNK_DURATION - LEIA_OVERLAP))
LEIA_NOISE_THRESHOLD = 0.01
LEIA_TRANSCRIBE_PROVIDER = LEIA_TRANSCRIBE_PROVIDER
LEIA_OPENAI_API_KEY = LEIA_OPENAI_API_KEY
LEIA_QUEUE_OUTPUT = QUEUE_FALCON_X_WING_AUDIO

__all__ = [
    "RABBITMQ_URI",
    "QUEUE_FALCON_AUDIO",
    "QUEUE_FALCON_SCREEN",
    "QUEUE_FALCON_DESCRIBE",
    "QUEUE_FALCON_ASK",
    "QUEUE_FALCON_TO_SPEECH",
    "QUEUE_FALCON_X_WING",
    "QUEUE_FALCON_X_WING_AUDIO",
    "PRINT_SCREEN",
    "START_RECORD",
    "STOP_RECORD",
    # Leia constants
    "LEIA_SAMPLERATE",
    "LEIA_CHUNK_DURATION",
    "LEIA_OVERLAP",
    "LEIA_BUFFER_SIZE",
    "LEIA_STEP_SIZE",
    "LEIA_NOISE_THRESHOLD",
    "LEIA_TRANSCRIBE_PROVIDER",
    "LEIA_OPENAI_API_KEY",
    "LEIA_QUEUE_OUTPUT",
]
